apiVersion: v1
kind: ServiceAccount
metadata:
  name: datagen
  namespace: datagen
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: datagen
  namespace: datagen
rules:
  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [kopf.dev]
    resources: [kopfpeerings]
    verbs: [list, watch, patch, get]
  # Framework: posting the events about the handlers progress/errors.
  - apiGroups: [""]
    resources: [events]
    verbs: [create]
  # Application: watching & handling for the custom resource we declare.
  - apiGroups: [kopf.dev]
    resources: ["kafkagens", "kafkagens/status", "miniogens", "miniogens/status", "postgresgens", "postgresgens/status"]
    verbs: [list, watch, patch]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "patch", "list", "watch", "create", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: datagen
rules:
  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [kopf.dev]
    resources: [clusterkopfpeerings]
    verbs: [list, watch, patch, get]
  # Framework: runtime observation of namespaces & CRDs (addition/deletion).
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [get, list, watch, create, update, patch, delete]
  - apiGroups: [""]
    resources: [namespaces]
    verbs: [list, watch]
  # Application: read-only access for watching cluster-wide.
  - apiGroups: [kopf.dev]
    resources: ["kafkagens", "miniogens", "postgresgens"]
    verbs: [get, list, watch, create, update, patch, delete]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "patch", "list", "watch", "create", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1 
kind: ClusterRoleBinding 
metadata: 
  name: datagen-binding
subjects: 
  - kind: ServiceAccount 
    name: datagen
    namespace: datagen
roleRef: 
  apiGroup: rbac.authorization.k8s.io 
  kind: ClusterRole 
  name: datagen
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: datagen-binding
  namespace: datagen
subjects:
  - kind: ServiceAccount
    name: datagen
    namespace: datagen
roleRef:
  kind: Role
  name: datagen
  apiGroup: rbac.authorization.k8s.io